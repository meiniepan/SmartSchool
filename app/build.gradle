apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def rootAndroidId = rootProject.ext.android
def appId = rootProject.ext.appId
def support = rootProject.ext.dependencies

android {
    signingConfigs {
        release {
            storeFile file('SmartSchool.jks')
            storePassword '555555'
            keyAlias 'key0'
            keyPassword '555555'
        }
    }
    compileSdkVersion rootAndroidId.compileSdkVersion
    buildToolsVersion rootAndroidId.buildToolsVersion
    defaultConfig {
        applicationId appId.app
        minSdkVersion rootAndroidId.minSdkVersion
        targetSdkVersion rootAndroidId.targetSdkVersion
        versionCode rootAndroidId.versionCode
        versionName rootAndroidId.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "e07277a487bc1e34304d9faa", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
        multiDexEnabled true

        signingConfig signingConfigs.release
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "IS_DEBUG", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "IS_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true // Zipalign优化
            shrinkResources true  // 移除无用的resource文件 
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

kapt {
    useBuildCache = true
    javacOptions {
        option("-Xmaxerrs", 500)
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation support.appcompat
    kapt "androidx.room:room-compiler:2.2.5"
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
    support.each { k, v -> implementation v }
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    api "com.android.support:design:29.0.0"
    //kotlin
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "androidx.core:core-ktx:1.2.0"
    // liveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"

    // viewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-extensions:2.2.0"
    //glide
    api 'com.github.bumptech.glide:glide:4.11.0'
    //retrofit
    api "com.squareup.retrofit2:retrofit:2.6.2"
    api "com.squareup.retrofit2:converter-gson:2.6.2"
    api "com.squareup.retrofit2:adapter-rxjava2:2.6.2"
    api ('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.android.support:multidex:1.0.3'
    implementation  'com.github.addappcn:android-pickers:2.0.0'
// 阿里云oss
    implementation 'com.aliyun.dpa:oss-android-sdk:+'

    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.5.9'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-28'

    //jiguang
    implementation 'cn.jiguang.sdk:jpush:3.7.0'  // 此处以JPush 3.7.0 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.4.2'  // 此处以JCore 2.4.2 版本为例。
}
